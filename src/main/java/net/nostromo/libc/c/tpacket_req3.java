/*
 * Copyright (c) 2015 Mark D. Horton
 *
 * This is free software; you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 3 of the License, or (at your option)
 * any later version.
 *
 * This software is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABIL-
 * ITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General
 * Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

package net.nostromo.libc.c;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : linux/if_packet.h:262</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class tpacket_req3 extends Structure {
	/** Minimal size of contiguous block */
	public int tp_block_size;
	/** Number of blocks */
	public int tp_block_nr;
	/** Size of frame */
	public int tp_frame_size;
	/** Total number of frames */
	public int tp_frame_nr;
	/** timeout in msecs */
	public int tp_retire_blk_tov;
	/** offset to private data area */
	public int tp_sizeof_priv;
	public int tp_feature_req_word;
	public tpacket_req3() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("tp_block_size", "tp_block_nr", "tp_frame_size", "tp_frame_nr", "tp_retire_blk_tov", "tp_sizeof_priv", "tp_feature_req_word");
	}
	/**
	 * @param tp_block_size Minimal size of contiguous block<br>
	 * @param tp_block_nr Number of blocks<br>
	 * @param tp_frame_size Size of frame<br>
	 * @param tp_frame_nr Total number of frames<br>
	 * @param tp_retire_blk_tov timeout in msecs<br>
	 * @param tp_sizeof_priv offset to private data area
	 */
	public tpacket_req3(int tp_block_size, int tp_block_nr, int tp_frame_size, int tp_frame_nr, int tp_retire_blk_tov,
			int tp_sizeof_priv, int tp_feature_req_word) {
		super();
		this.tp_block_size = tp_block_size;
		this.tp_block_nr = tp_block_nr;
		this.tp_frame_size = tp_frame_size;
		this.tp_frame_nr = tp_frame_nr;
		this.tp_retire_blk_tov = tp_retire_blk_tov;
		this.tp_sizeof_priv = tp_sizeof_priv;
		this.tp_feature_req_word = tp_feature_req_word;
	}
	public tpacket_req3(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends tpacket_req3 implements Structure.ByReference {

	};
	public static class ByValue extends tpacket_req3 implements Structure.ByValue {

	};
}
