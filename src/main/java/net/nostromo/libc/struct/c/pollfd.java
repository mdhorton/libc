/*
 * Copyright (c) 2015 Mark D. Horton
 *
 * This is free software; you can redistribute it and/or modify it under the
 * terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 3 of the License, or (at your option)
 * any later version.
 *
 * This software is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABIL-
 * ITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General
 * Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

package net.nostromo.libc.struct.c;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * Data structure describing a polling request.<br>
 * <i>native declaration : sys/poll.h:38</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class pollfd extends Structure {
	/** File descriptor to poll. */
	public int fd;
	/** Types of events poller cares about. */
	public short events;
	/** Types of events that actually occurred. */
	public short revents;
	public pollfd() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("fd", "events", "revents");
	}
	/**
	 * @param fd File descriptor to poll.<br>
	 * @param events Types of events poller cares about.<br>
	 * @param revents Types of events that actually occurred.
	 */
	public pollfd(int fd, short events, short revents) {
		super();
		this.fd = fd;
		this.events = events;
		this.revents = revents;
	}
	public pollfd(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends pollfd implements Structure.ByReference {

	};
	public static class ByValue extends pollfd implements Structure.ByValue {

	};
}
